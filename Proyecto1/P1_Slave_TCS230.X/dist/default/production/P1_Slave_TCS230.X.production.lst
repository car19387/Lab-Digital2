

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 20 23:34:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	idataCOMMON
   287  00DA                     __pidataCOMMON:
   288                           
   289                           ;initializer for _Sp
   290  00DA  3414               	retlw	20
   291                           
   292                           ;initializer for _CC
   293  00DB  340A               	retlw	10
   294  000B                     _INTCONbits	set	11
   295  0009                     _PORTE	set	9
   296  0008                     _PORTD	set	8
   297  0007                     _PORTC	set	7
   298  0006                     _PORTB	set	6
   299  0005                     _PORTA	set	5
   300  0014                     _SSPCONbits	set	20
   301  000C                     _PIR1bits	set	12
   302  0013                     _SSPBUF	set	19
   303  0014                     _SSPCON	set	20
   304  0063                     _SSPIF	set	99
   305  005E                     _PEIE	set	94
   306  005F                     _GIE	set	95
   307  008F                     _OSCCONbits	set	143
   308  0089                     _TRISE	set	137
   309  0088                     _TRISD	set	136
   310  0087                     _TRISC	set	135
   311  0086                     _TRISB	set	134
   312  0085                     _TRISA	set	133
   313  0094                     _SSPSTATbits	set	148
   314  0091                     _SSPCON2bits	set	145
   315  0087                     _TRISCbits	set	135
   316  0094                     _SSPSTAT	set	148
   317  0093                     _SSPADD	set	147
   318  0091                     _SSPCON2	set	145
   319  04A0                     _BF	set	1184
   320  0463                     _SSPIE	set	1123
   321  043C                     _TRISC4	set	1084
   322  043B                     _TRISC3	set	1083
   323  0189                     _ANSELH	set	393
   324  0188                     _ANSEL	set	392
   325                           
   326                           	psect	cinit
   327  000F                     start_initialization:	
   328                           ; #config settings
   329                           
   330  000F                     __initialization:
   331                           
   332                           ; Initialize objects allocated to COMMON
   333  000F  120A  118A  20DA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   334  0014  00F6               	movwf	__pdataCOMMON& (0+127)
   335  0015  120A  118A  20DB  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   336  001A  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   337                           
   338                           ; Clear objects allocated to COMMON
   339  001B  01F4               	clrf	__pbssCOMMON& (0+127)
   340  001C  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   341  001D                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  001D                     __end_of__initialization:
   345  001D  0183               	clrf	3
   346  001E  120A  118A  28D1   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMMON
   349  0074                     __pbssCOMMON:
   350  0074                     _z:
   351  0074                     	ds	1
   352  0075                     _b:
   353  0075                     	ds	1
   354                           
   355                           	psect	dataCOMMON
   356  0076                     __pdataCOMMON:
   357  0076                     _Sp:
   358  0076                     	ds	1
   359  0077                     _CC:
   360  0077                     	ds	1
   361                           
   362                           	psect	cstackCOMMON
   363  0070                     __pcstackCOMMON:
   364  0070                     ?_setup:
   365  0070                     ?_I2C_Slave_Init:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_isr:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_isr:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0070                     	ds	3
   380  0073                     ??_I2C_Slave_Init:
   381  0073                     I2C_Slave_Init@address:	
   382                           ; 1 bytes @ 0x3
   383                           
   384                           
   385                           ; 1 bytes @ 0x3
   386  0073                     	ds	1
   387  0074                     ??_setup:
   388  0074                     ??_main:	
   389                           ; 1 bytes @ 0x4
   390                           
   391                           
   392                           	psect	maintext
   393  00D1                     __pmaintext:	
   394                           ; 1 bytes @ 0x4
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 60 in file "P1 Slave1 TCS230.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : B00/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels required when called: 3
   420 ;; This function calls:
   421 ;;		_setup
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _main
   429  00D1                     _main:
   430  00D1                     l820:	
   431                           ;incstack = 0
   432                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   433                           
   434                           
   435                           ;P1 Slave1 TCS230.c: 61:     setup();
   436  00D1  120A  118A  2094  120A  118A  	fcall	_setup
   437  00D6                     l112:	
   438                           ;P1 Slave1 TCS230.c: 66:     while(1){
   439                           
   440  00D6                     l113:	
   441                           ;P1 Slave1 TCS230.c: 68:     }
   442                           
   443  00D6  28D6               	goto	l112
   444  00D7  120A  118A  280C   	ljmp	start
   445  00DA                     __end_of_main:
   446                           
   447                           	psect	text1
   448  0094                     __ptext1:	
   449 ;; *************** function _setup *****************
   450 ;; Defined at:
   451 ;;		line 115 in file "P1 Slave1 TCS230.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 2
   472 ;; This function calls:
   473 ;;		_I2C_Slave_Init
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           
   480                           ;psect for function _setup
   481  0094                     _setup:
   482  0094                     l748:	
   483                           ;incstack = 0
   484                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   485                           
   486                           
   487                           ;P1 Slave1 TCS230.c: 117:     ANSEL = 0x01;
   488  0094  3001               	movlw	1
   489  0095  1683               	bsf	3,5	;RP0=1, select bank3
   490  0096  1703               	bsf	3,6	;RP1=1, select bank3
   491  0097  0088               	movwf	8	;volatile
   492  0098                     l750:
   493                           
   494                           ;P1 Slave1 TCS230.c: 118:     ANSELH = 0x00;
   495  0098  0189               	clrf	9	;volatile
   496  0099                     l752:
   497                           
   498                           ;P1 Slave1 TCS230.c: 120:     TRISA = 0x01;
   499  0099  3001               	movlw	1
   500  009A  1683               	bsf	3,5	;RP0=1, select bank1
   501  009B  1303               	bcf	3,6	;RP1=0, select bank1
   502  009C  0085               	movwf	5	;volatile
   503                           
   504                           ;P1 Slave1 TCS230.c: 121:     TRISB = 0x00;
   505  009D  0186               	clrf	6	;volatile
   506  009E                     l754:
   507                           
   508                           ;P1 Slave1 TCS230.c: 122:     TRISC = 0x08;
   509  009E  3008               	movlw	8
   510  009F  0087               	movwf	7	;volatile
   511  00A0                     l756:
   512                           
   513                           ;P1 Slave1 TCS230.c: 123:     TRISD = 0x00;
   514  00A0  0188               	clrf	8	;volatile
   515  00A1                     l758:
   516                           
   517                           ;P1 Slave1 TCS230.c: 124:     TRISE = 0x00;
   518  00A1  0189               	clrf	9	;volatile
   519  00A2                     l760:
   520                           
   521                           ;P1 Slave1 TCS230.c: 126:     PORTA = 0x00;
   522  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   523  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   524  00A4  0185               	clrf	5	;volatile
   525  00A5                     l762:
   526                           
   527                           ;P1 Slave1 TCS230.c: 127:     PORTB = 0x00;
   528  00A5  0186               	clrf	6	;volatile
   529  00A6                     l764:
   530                           
   531                           ;P1 Slave1 TCS230.c: 128:     PORTC = 0x00;
   532  00A6  0187               	clrf	7	;volatile
   533  00A7                     l766:
   534                           
   535                           ;P1 Slave1 TCS230.c: 129:     PORTD = 0x00;
   536  00A7  0188               	clrf	8	;volatile
   537  00A8                     l768:
   538                           
   539                           ;P1 Slave1 TCS230.c: 130:     PORTE = 0x00;
   540  00A8  0189               	clrf	9	;volatile
   541  00A9                     l770:
   542                           
   543                           ;P1 Slave1 TCS230.c: 133:     OSCCONbits.IRCF = 0b111;
   544  00A9  3070               	movlw	112
   545  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   546  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   547  00AC  048F               	iorwf	15,f	;volatile
   548  00AD                     l772:
   549                           
   550                           ;P1 Slave1 TCS230.c: 134:     OSCCONbits.SCS = 1;
   551  00AD  140F               	bsf	15,0	;volatile
   552  00AE                     l774:
   553                           
   554                           ;P1 Slave1 TCS230.c: 137:     INTCONbits.GIE = 1;
   555  00AE  178B               	bsf	11,7	;volatile
   556  00AF                     l776:
   557                           
   558                           ;P1 Slave1 TCS230.c: 138:     INTCONbits.PEIE = 1;
   559  00AF  170B               	bsf	11,6	;volatile
   560  00B0                     l778:
   561                           
   562                           ;P1 Slave1 TCS230.c: 139:     I2C_Slave_Init(0x60);
   563  00B0  3060               	movlw	96
   564  00B1  120A  118A  20B7  120A  118A  	fcall	_I2C_Slave_Init
   565  00B6                     l138:
   566  00B6  0008               	return
   567  00B7                     __end_of_setup:
   568                           
   569                           	psect	text2
   570  00B7                     __ptext2:	
   571 ;; *************** function _I2C_Slave_Init *****************
   572 ;; Defined at:
   573 ;;		line 93 in file "I2C.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  address         1    wreg     unsigned char 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  address         1    3[COMMON] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         1       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0
   590 ;;      Totals:         1       0       0       0       0
   591 ;;Total ram usage:        1 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_setup
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _I2C_Slave_Init
   603  00B7                     _I2C_Slave_Init:
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _I2C_Slave_Init: [wreg]
   607                           ;I2C_Slave_Init@address stored from wreg
   608  00B7  00F3               	movwf	I2C_Slave_Init@address
   609  00B8                     l730:
   610                           
   611                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   612  00B8  0873               	movf	I2C_Slave_Init@address,w
   613  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   614  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   615  00BB  0093               	movwf	19	;volatile
   616                           
   617                           ;I2C.c: 96:     SSPCON = 0x36;
   618  00BC  3036               	movlw	54
   619  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   620  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   621  00BF  0094               	movwf	20	;volatile
   622                           
   623                           ;I2C.c: 97:     SSPSTAT = 0x80;
   624  00C0  3080               	movlw	128
   625  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   626  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   627  00C3  0094               	movwf	20	;volatile
   628                           
   629                           ;I2C.c: 98:     SSPCON2 = 0x01;
   630  00C4  3001               	movlw	1
   631  00C5  0091               	movwf	17	;volatile
   632  00C6                     l732:
   633                           
   634                           ;I2C.c: 99:     TRISC3 = 1;
   635  00C6  1587               	bsf	7,3	;volatile
   636  00C7                     l734:
   637                           
   638                           ;I2C.c: 100:     TRISC4 = 1;
   639  00C7  1607               	bsf	7,4	;volatile
   640  00C8                     l736:
   641                           
   642                           ;I2C.c: 101:     GIE = 1;
   643  00C8  178B               	bsf	11,7	;volatile
   644  00C9                     l738:
   645                           
   646                           ;I2C.c: 102:     PEIE = 1;
   647  00C9  170B               	bsf	11,6	;volatile
   648  00CA                     l740:
   649                           
   650                           ;I2C.c: 103:     SSPIF = 0;
   651  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   652  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   653  00CC  118C               	bcf	12,3	;volatile
   654  00CD                     l742:
   655                           
   656                           ;I2C.c: 104:     SSPIE = 1;
   657  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   658  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   659  00CF  158C               	bsf	12,3	;volatile
   660  00D0                     l55:
   661  00D0  0008               	return
   662  00D1                     __end_of_I2C_Slave_Init:
   663                           
   664                           	psect	text3
   665  0021                     __ptext3:	
   666 ;; *************** function _isr *****************
   667 ;; Defined at:
   668 ;;		line 75 in file "P1 Slave1 TCS230.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          3       0       0       0       0
   685 ;;      Totals:         3       0       0       0       0
   686 ;;Total ram usage:        3 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		Interrupt level 1
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _isr
   697  0021                     _isr:
   698  0021                     i1l822:
   699                           
   700                           ;P1 Slave1 TCS230.c: 76:     if(PIR1bits.SSPIF == 1){
   701  0021  1283               	bcf	3,5	;RP0=0, select bank0
   702  0022  1303               	bcf	3,6	;RP1=0, select bank0
   703  0023  1D8C               	btfss	12,3	;volatile
   704  0024  2826               	goto	u5_21
   705  0025  2827               	goto	u5_20
   706  0026                     u5_21:
   707  0026  288D               	goto	i1l135
   708  0027                     u5_20:
   709  0027                     i1l824:
   710                           
   711                           ;P1 Slave1 TCS230.c: 77:         SSPCONbits.CKP = 0;
   712  0027  1214               	bcf	20,4	;volatile
   713                           
   714                           ;P1 Slave1 TCS230.c: 79:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   715  0028  1B14               	btfsc	20,6	;volatile
   716  0029  282B               	goto	u6_21
   717  002A  282C               	goto	u6_20
   718  002B                     u6_21:
   719  002B  2830               	goto	i1l828
   720  002C                     u6_20:
   721  002C                     i1l826:
   722  002C  1F94               	btfss	20,7	;volatile
   723  002D  282F               	goto	u7_21
   724  002E  2830               	goto	u7_20
   725  002F                     u7_21:
   726  002F  2837               	goto	i1l836
   727  0030                     u7_20:
   728  0030                     i1l828:
   729                           
   730                           ;P1 Slave1 TCS230.c: 80:             z = SSPBUF;
   731  0030  0813               	movf	19,w	;volatile
   732  0031  00F0               	movwf	??_isr
   733  0032  0870               	movf	??_isr,w
   734  0033  00F4               	movwf	_z
   735  0034                     i1l830:
   736                           
   737                           ;P1 Slave1 TCS230.c: 81:             SSPCONbits.SSPOV = 0;
   738  0034  1314               	bcf	20,6	;volatile
   739  0035                     i1l832:
   740                           
   741                           ;P1 Slave1 TCS230.c: 82:             SSPCONbits.WCOL = 0;
   742  0035  1394               	bcf	20,7	;volatile
   743  0036                     i1l834:
   744                           
   745                           ;P1 Slave1 TCS230.c: 83:             SSPCONbits.CKP = 1;
   746  0036  1614               	bsf	20,4	;volatile
   747  0037                     i1l836:
   748                           
   749                           ;P1 Slave1 TCS230.c: 86:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   750  0037  1683               	bsf	3,5	;RP0=1, select bank1
   751  0038  1303               	bcf	3,6	;RP1=0, select bank1
   752  0039  1A94               	btfsc	20,5	;volatile
   753  003A  283C               	goto	u8_21
   754  003B  283D               	goto	u8_20
   755  003C                     u8_21:
   756  003C  285B               	goto	i1l124
   757  003D                     u8_20:
   758  003D                     i1l838:
   759  003D  1914               	btfsc	20,2	;volatile
   760  003E  2840               	goto	u9_21
   761  003F  2841               	goto	u9_20
   762  0040                     u9_21:
   763  0040  285B               	goto	i1l124
   764  0041                     u9_20:
   765  0041                     i1l840:
   766                           
   767                           ;P1 Slave1 TCS230.c: 87:             z = SSPBUF;
   768  0041  1283               	bcf	3,5	;RP0=0, select bank0
   769  0042  1303               	bcf	3,6	;RP1=0, select bank0
   770  0043  0813               	movf	19,w	;volatile
   771  0044  00F0               	movwf	??_isr
   772  0045  0870               	movf	??_isr,w
   773  0046  00F4               	movwf	_z
   774  0047                     i1l842:
   775                           
   776                           ;P1 Slave1 TCS230.c: 88:             PIR1bits.SSPIF = 0;
   777  0047  118C               	bcf	12,3	;volatile
   778  0048                     i1l844:
   779                           
   780                           ;P1 Slave1 TCS230.c: 89:             SSPCONbits.CKP = 1;
   781  0048  1614               	bsf	20,4	;volatile
   782  0049                     i1l125:	
   783                           ;P1 Slave1 TCS230.c: 90:             while(!SSPSTATbits.BF);
   784                           
   785  0049  1683               	bsf	3,5	;RP0=1, select bank1
   786  004A  1303               	bcf	3,6	;RP1=0, select bank1
   787  004B  1C14               	btfss	20,0	;volatile
   788  004C  284E               	goto	u10_21
   789  004D  284F               	goto	u10_20
   790  004E                     u10_21:
   791  004E  2849               	goto	i1l125
   792  004F                     u10_20:
   793  004F                     i1l846:
   794                           
   795                           ;P1 Slave1 TCS230.c: 91:             b = SSPBUF;
   796  004F  1283               	bcf	3,5	;RP0=0, select bank0
   797  0050  1303               	bcf	3,6	;RP1=0, select bank0
   798  0051  0813               	movf	19,w	;volatile
   799  0052  00F0               	movwf	??_isr
   800  0053  0870               	movf	??_isr,w
   801  0054  00F5               	movwf	_b
   802                           
   803                           ;P1 Slave1 TCS230.c: 92:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   804  0055  30A6               	movlw	166
   805  0056  00F0               	movwf	??_isr
   806  0057                     u16_27:
   807  0057  0BF0               	decfsz	??_isr,f
   808  0058  2857               	goto	u16_27
   809  0059  0000               	nop
   810                           
   811                           ;P1 Slave1 TCS230.c: 93:         }
   812  005A  288A               	goto	i1l128
   813  005B                     i1l124:	
   814                           ;P1 Slave1 TCS230.c: 95:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   815                           
   816  005B  1A94               	btfsc	20,5	;volatile
   817  005C  285E               	goto	u11_21
   818  005D  285F               	goto	u11_20
   819  005E                     u11_21:
   820  005E  288A               	goto	i1l128
   821  005F                     u11_20:
   822  005F                     i1l848:
   823  005F  1D14               	btfss	20,2	;volatile
   824  0060  2862               	goto	u12_21
   825  0061  2863               	goto	u12_20
   826  0062                     u12_21:
   827  0062  288A               	goto	i1l128
   828  0063                     u12_20:
   829  0063                     i1l850:
   830                           
   831                           ;P1 Slave1 TCS230.c: 96:             z = SSPBUF;
   832  0063  1283               	bcf	3,5	;RP0=0, select bank0
   833  0064  1303               	bcf	3,6	;RP1=0, select bank0
   834  0065  0813               	movf	19,w	;volatile
   835  0066  00F0               	movwf	??_isr
   836  0067  0870               	movf	??_isr,w
   837  0068  00F4               	movwf	_z
   838  0069                     i1l852:
   839                           
   840                           ;P1 Slave1 TCS230.c: 97:             BF = 0;
   841  0069  1683               	bsf	3,5	;RP0=1, select bank1
   842  006A  1303               	bcf	3,6	;RP1=0, select bank1
   843  006B  1014               	bcf	20,0	;volatile
   844  006C                     i1l854:
   845                           
   846                           ;P1 Slave1 TCS230.c: 98:             if(b == 0){
   847  006C  0875               	movf	_b,w
   848  006D  1D03               	btfss	3,2
   849  006E  2870               	goto	u13_21
   850  006F  2871               	goto	u13_20
   851  0070                     u13_21:
   852  0070  2875               	goto	i1l858
   853  0071                     u13_20:
   854  0071                     i1l856:
   855                           
   856                           ;P1 Slave1 TCS230.c: 99:                 SSPBUF = CC;
   857  0071  0877               	movf	_CC,w
   858  0072  1283               	bcf	3,5	;RP0=0, select bank0
   859  0073  1303               	bcf	3,6	;RP1=0, select bank0
   860  0074  0093               	movwf	19	;volatile
   861  0075                     i1l858:
   862                           
   863                           ;P1 Slave1 TCS230.c: 101:             if(b == 1){
   864  0075  0375               	decf	_b,w
   865  0076  1D03               	btfss	3,2
   866  0077  2879               	goto	u14_21
   867  0078  287A               	goto	u14_20
   868  0079                     u14_21:
   869  0079  287D               	goto	i1l862
   870  007A                     u14_20:
   871  007A                     i1l860:
   872                           
   873                           ;P1 Slave1 TCS230.c: 102:                 SSPBUF = Sp;
   874  007A  0876               	movf	_Sp,w
   875  007B  1283               	bcf	3,5	;RP0=0, select bank0
   876  007C  0093               	movwf	19	;volatile
   877  007D                     i1l862:
   878                           
   879                           ;P1 Slave1 TCS230.c: 104:             SSPCONbits.CKP = 1;
   880  007D  1283               	bcf	3,5	;RP0=0, select bank0
   881  007E  1614               	bsf	20,4	;volatile
   882                           
   883                           ;P1 Slave1 TCS230.c: 105:             _delay((unsigned long)((250)*(8000000/4000000.0)))
      +                          ;
   884  007F  30A6               	movlw	166
   885  0080  00F0               	movwf	??_isr
   886  0081                     u17_27:
   887  0081  0BF0               	decfsz	??_isr,f
   888  0082  2881               	goto	u17_27
   889  0083  0000               	nop
   890  0084                     i1l132:	
   891                           ;P1 Slave1 TCS230.c: 106:             while(SSPSTATbits.BF);
   892                           
   893  0084  1683               	bsf	3,5	;RP0=1, select bank1
   894  0085  1303               	bcf	3,6	;RP1=0, select bank1
   895  0086  1814               	btfsc	20,0	;volatile
   896  0087  2889               	goto	u15_21
   897  0088  288A               	goto	u15_20
   898  0089                     u15_21:
   899  0089  2884               	goto	i1l132
   900  008A                     u15_20:
   901  008A                     i1l128:
   902                           
   903                           ;P1 Slave1 TCS230.c: 108:         PIR1bits.SSPIF = 0;
   904  008A  1283               	bcf	3,5	;RP0=0, select bank0
   905  008B  1303               	bcf	3,6	;RP1=0, select bank0
   906  008C  118C               	bcf	12,3	;volatile
   907  008D                     i1l135:
   908  008D  0872               	movf	??_isr+2,w
   909  008E  008A               	movwf	10
   910  008F  0E71               	swapf	??_isr+1,w
   911  0090  0083               	movwf	3
   912  0091  0EFE               	swapf	btemp,f
   913  0092  0E7E               	swapf	btemp,w
   914  0093  0009               	retfie
   915  0094                     __end_of_isr:
   916  007E                     btemp	set	126	;btemp
   917  007E                     wtemp0	set	126
   918                           
   919                           	psect	intentry
   920  0004                     __pintentry:	
   921                           ;incstack = 0
   922                           ; Regs used in _isr: [wreg+status,2+status,0]
   923                           
   924  0004                     interrupt_function:
   925  007E                     saved_w	set	btemp
   926  0004  00FE               	movwf	btemp
   927  0005  0E03               	swapf	3,w
   928  0006  00F1               	movwf	??_isr+1
   929  0007  080A               	movf	10,w
   930  0008  00F2               	movwf	??_isr+2
   931  0009  120A  118A  2821   	ljmp	_isr
   932                           
   933                           	psect	config
   934                           
   935                           ;Config register CONFIG1 @ 0x2007
   936                           ;	Oscillator Selection bits
   937                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   938                           ;	Watchdog Timer Enable bit
   939                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   940                           ;	Power-up Timer Enable bit
   941                           ;	PWRTE = OFF, PWRT disabled
   942                           ;	RE3/MCLR pin function select bit
   943                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   944                           ;	Code Protection bit
   945                           ;	CP = OFF, Program memory code protection is disabled
   946                           ;	Data Code Protection bit
   947                           ;	CPD = OFF, Data memory code protection is disabled
   948                           ;	Brown Out Reset Selection bits
   949                           ;	BOREN = OFF, BOR disabled
   950                           ;	Internal External Switchover bit
   951                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   952                           ;	Fail-Safe Clock Monitor Enabled bit
   953                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   954                           ;	Low Voltage Programming Enable bit
   955                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   956                           ;	In-Circuit Debugger Mode bit
   957                           ;	DEBUG = 0x1, unprogrammed default
   958  2007                     	org	8199
   959  2007  20D4               	dw	8404
   960                           
   961                           ;Config register CONFIG2 @ 0x2008
   962                           ;	Brown-out Reset Selection bit
   963                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   964                           ;	Flash Program Memory Self Write Enable bits
   965                           ;	WRT = OFF, Write protection off
   966  2008                     	org	8200
   967  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 20 23:34:47 2021

                      _b 0075                        _z 0074              _SSPSTATbits 0094  
                     _CC 0077                       _BF 04A0                       l55 00D0  
                     _Sp 0076                      l112 00D6                      l113 00D6  
                    l138 00B6                      l730 00B8                      l740 00CA  
                    l732 00C6                      l820 00D1                      l742 00CD  
                    l734 00C7                      l750 0098                      l736 00C8  
                    l760 00A2                      l752 0099                      l738 00C9  
                    l770 00A9                      l762 00A5                      l754 009E  
                    l772 00AD                      l764 00A6                      l756 00A0  
                    l748 0094                      l774 00AE                      l766 00A7  
                    l758 00A1                      l776 00AF                      l768 00A8  
                    l778 00B0                      _GIE 005F                      _isr 0021  
                   ?_isr 0070                     _PEIE 005E                     u5_20 0027  
                   u5_21 0026                     u6_20 002C                     u6_21 002B  
                   u7_20 0030                     u7_21 002F                     u8_20 003D  
                   u8_21 003C                     u9_20 0041                     u9_21 0040  
                   _main 00D1                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l132 0084                    i1l124 005B                    i1l125 0049  
                  i1l135 008D                    i1l128 008A                    i1l830 0034  
                  i1l822 0021                    i1l840 0041                    i1l832 0035  
                  i1l824 0027                    i1l850 0063                    i1l842 0047  
                  i1l834 0036                    i1l826 002C                    i1l860 007A  
                  i1l852 0069                    i1l844 0048                    i1l836 0037  
                  i1l828 0030                    i1l862 007D                    i1l854 006C  
                  i1l846 004F                    i1l838 003D                    i1l856 0071  
                  i1l848 005F                    i1l858 0075                    u10_20 004F  
                  u10_21 004E                    u11_20 005F                    u11_21 005E  
                  u12_20 0063                    u12_21 0062                    u13_20 0071  
                  u13_21 0070                    u14_20 007A                    u14_21 0079  
                  u15_20 008A                    u15_21 0089                    u16_27 0057  
                  u17_27 0081                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0094                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00DA                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
           __pdataCOMMON 0076                   saved_w 007E  __end_of__initialization 001D  
         __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A            __end_of_setup 00B7  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pmaintext 00D1  
             __pintentry 0004                  _SSPCON2 0091                  _SSPSTAT 0094  
                __ptext1 0094                  __ptext2 00B7                  __ptext3 0021  
           __size_of_isr 0073     end_of_initialization 001D           _I2C_Slave_Init 00B7  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 00D1            __pidataCOMMON 00DA  
    start_initialization 000F              __end_of_isr 0094          ?_I2C_Slave_Init 0070  
            __pbssCOMMON 0074                ___latbits 0002           __size_of_setup 0023  
      interrupt_function 0004                 _PIR1bits 000C         ??_I2C_Slave_Init 0073  
          __size_of_main 0009               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _SSPCON2bits 0091               _SSPCONbits 0014  
